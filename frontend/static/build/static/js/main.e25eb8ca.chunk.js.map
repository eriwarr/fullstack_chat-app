{"version":3,"sources":["Registration.js","Login.js","MessageForm.js","ChatDetail.js","ChatList.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","event","this","setState","target","name","value","e","preventDefault","handleRegistration","onSubmit","className","htmlFor","type","id","onChange","aria-describedby","onClick","handleNavigation","Component","Login","password","handleLogin","MessageForm","messages","sendMessage","currentMessage","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","placeholder","ChatDetail","isEditing","edit","handleEdit","handleDelete","index","findIndex","splice","console","log","ChatList","user","data","messageDisplay","map","owner","toUpperCase","time","App","selection","handleLogout","a","handleError","err","warn","catch","ok","remove","set","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e25eb8ca.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n\n  render() {\n    return(\n\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Create a username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Enter your email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Choose a password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password1\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Enter Password Again</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password2\" onChange={this.handleInput} />\n        </div>\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Already have an account? Login!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n      </form>\n\n      // <form onSubmit={this.handleSubmit}>\n      //   <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.handleInput}/>\n      //   <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.handleInput}/>\n      //   <input type=\"password\" name=\"password1\" placeholder=\"password\" onChange={this.handleInput}/>\n      //   <input type=\"password\" name=\"password2\" placeholder=\"enter password again\" onChange={this.handleInput}/>\n      // </form>\n\n    )\n  }\n}\n\nexport default Registration\n","import { Component } from 'react';\nimport './App.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={this.handleInput} />\n        </div>\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('register')}>Need an account? Register!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login\n","import Cookies from 'js-cookie';\nimport { Component } from 'react';\nimport './App.css';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  sendMessage(event) {\n    event.preventDefault();\n    const currentMessage = {\n        message: this.state.messages,\n    }\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(currentMessage),\n    }\n    fetch('/api/v1/chat/', options)\n      .then(response => response.json());\n\n}\n  render() {\n\n    return (\n      <form onSubmit= {this.sendMessage}>\n        <textarea className=\"form-input\" name=\"messages\" value={this.state.messages} placeholder=\"Start your message\" onChange={this.handleInput}></textarea>\n        <button className=\"send-button\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageForm;\n","import {Component} from 'react';\nimport Cookies from 'js-cookie';\n\nclass ChatDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditing: null,\n      edit: '',\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n\n  }\n\n  handleInput(event){\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleDelete(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    }\n\n    fetch(`/api/v1/chat/${id}/`, options)\n    .then(response => {\n      const messages = [ ...this.props.messages];\n      const index = messages.findIndex(message => message.id === id);\n      messages.splice(index, 1);\n      this.setState({ messages });\n    })\n\n  }\n\n  handleEdit(id, message) {\n    this.setState({isEditing: null});\n    \n    const currentMessage = {\n      message: this.state.edit,\n    }\n      console.log(id)\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(currentMessage),\n    }\n    fetch(`/api/v1/chat/${id}/`, options)\n      .then(response => {\n        const messages = [ ...this.props.messages];\n        const index = messages.findIndex(message => message.id === id);\n        messages[index].message = message;\n        this.setState({ messages })\n      })\n  }\n\n  render() {\n\n    return(\n      <>\n      {this.state.isEditing === this.props.id ? <input type=\"text\" name=\"edit\" onChange={this.handleInput}/> : <p>{this.props.message}</p>}\n      {this.state.isEditing === this.props.id ? <button type=\"button\" onClick={() => this.handleEdit(this.props.id, this.props.message)}>SAVE</button> : <button type=\"button\" onClick={() => this.setState({ isEditing: this.props.id})}>EDIT</button>}\n      <button type=\"button\" onClick={() => this.handleDelete(this.props.id, this.props.message)}>DELETE</button>\n      </>\n    )\n  }\n}\n\nexport default ChatDetail;\n\n\n// <button type=\"button\" onClick={() => this.handleEdit(message.message, message.id)}>EDIT</button><button type=\"button\" onClick={() => this.handleDelete(message.id)}>DELETE</button>\n","import {Component} from 'react';\nimport MessageForm from './MessageForm';\nimport ChatDetail from './ChatDetail';\n\nclass ChatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      user: '',\n    }\n}\n  componentDidMount() {\n\n    fetch('api/v1/chat/')\n    .then(response => response.json())\n    .then(data => this.setState({ messages: data }));\n    fetch('rest-auth/user/')\n    .then(response => response.json())\n    .then(data => this.setState({ user: data.username}));\n  }\n\n  //   <ChatDetail messageId={this.props.message.id} message={message.message}/>\n  //   <p>{message.time}</p>\n\n  render() {\n\n    const messageDisplay = this.state.messages.map((message) => (\n      <li className='list'key={message.id}>\n        <h6>{message.owner.toUpperCase()}</h6>\n        {this.state.user === message.owner ? <ChatDetail id={message.id} message={message.message} messages={this.state.messages}/> : <p>{message.message}</p>}\n        <p>{message.time}</p>\n    </li>\n    ))\n\n    return(\n      <>\n      <div className=\"chat-box\">\n        {messageDisplay}\n      </div>\n      <div className=\"message-box\">\n        <MessageForm/>\n      </div>\n    </>\n    )\n  }\n}\n\nexport default ChatList;\n\n\n// <button type=\"button\" onClick={() => this.handleEdit(message.message, message.id)}>EDIT</button><button type=\"button\" onClick={() => this.handleDelete(message.id)}>DELETE</button>\n","import './App.css';\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nimport Registration from './Registration';\nimport Login from './Login';\n\nimport ChatList from './ChatList';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login',\n      user: '',\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  async handleLogout() {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n    if(response.ok) {\n      Cookies.remove('Authorization');\n      this.setState({selection: 'login'});\n    }\n\n\n  }\n\n  async handleLogin(user) {\n    this.setState({ user: user.username });\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      console.log(response)\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chats'});\n    } else {\n      // throw an Error\n    }\n\n  }\n\n  async handleRegistration(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    } else {\n      // throw an Error\n    }\n  }\n\n  handleNavigation(selection) {\n    this.setState({selection});\n  }\n\n  render() {\n\n    return (\n      <>\n       <div className=\"App\">\n         <div className=\"App-header\">\n           {this.state.selection === 'chats' && <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleLogout}>LOGOUT</button>}\n            <h1>My Awesome Chat App</h1>\n            {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n            {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>}\n            {this.state.selection === 'chats' && <ChatList user={this.state.user}/>}\n        </div>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}