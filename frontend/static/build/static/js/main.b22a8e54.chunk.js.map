{"version":3,"sources":["Registration.js","Login.js","ChatList.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","event","this","setState","target","name","value","e","preventDefault","handleRegistration","onSubmit","type","placeholder","onChange","Component","Login","password","handleLogin","onClick","handleNavigation","ChatList","App","selection","Cookies","get","fetch","then","response","json","data","messages","user","a","options","method","headers","body","JSON","stringify","handleError","err","console","warn","catch","ok","set","key","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b22a8e54.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.handleInput}/>\n        <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.handleInput}/>\n        <input type=\"password\" name=\"password1\" placeholder=\"password\" onChange={this.handleInput}/>\n        <input type=\"password\" name=\"password2\" placeholder=\"enter password again\" onChange={this.handleInput}/>\n        <button type=\"submit\">REGISTER</button>\n      </form>\n\n    )\n  }\n}\n\nexport default Registration\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.handleInput}/>\n        <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.handleInput}/>\n        <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.handleInput}/>\n        <button type=\"button\" onClick={() => this.props.handleNavigation('register')}>Need an account? Register!</button>\n        <button type=\"submit\">LOGIN</button>\n      </form>\n\n    )\n  }\n}\n\nexport default Login\n","import {Component} from 'react';\n\nclass ChatList extends Component {\n\n\n  render() {\n    return(\n      <div>I am the chat list</div>\n    )\n  }\n}\n\nexport default ChatList;\n","import './App.css';\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nimport Registration from './Registration';\nimport Login from './Login';\n\nimport ChatList from './ChatList';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  sendMessage(event) {\n    // event.preventDefault();\n    // this.setState({ messages: '' })\n\n    const currentMessage = {\n        message: this.state.messages,\n    }\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(currentMessage),\n    }\n    fetch('/api/v1/chat/', options)\n      .then(response => response.json());\n}\n  render() {\n\n    return (\n      <form onSubmit= {this.sendMessage}>\n        <textarea className=\"form-input\" name=\"messages\" value={this.state.messages} placeholder=\"Start your messge\" onChange={this.handleInput}></textarea>\n        <button type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login'\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleNavigation = this.handleNavigation.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('api/v1/chat/')\n    .then(response => response.json())\n    .then(data => this.setState({ messages: data }));\n  }\n\n  async handleLogin(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chats'});\n    } else {\n      // throw an Error\n    }\n  }\n\n  async handleRegistration(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    } else {\n      // throw an Error\n    }\n  }\n\n  handleNavigation(selection) {\n    this.setState({selection});\n  }\n\n  render() {\n\n    return (\n      <>\n       <div className=\"App\">\n         <div className=\"App-header\">\n           <h1>My Awesome Chat App</h1>\n            {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n            {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} />}\n            {this.state.selection === 'chats' && <ChatList />}\n        </div>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}