{"version":3,"sources":["Registration.js","Login.js","Chats.js","ChatList.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","props","state","username","email","password1","password2","handleSubmit","bind","handleInput","event","this","setState","target","name","value","e","preventDefault","handleRegistration","onSubmit","className","htmlFor","type","id","onChange","aria-describedby","onClick","handleNavigation","Component","Login","password","handleLogin","MessageForm","messages","sendMessage","currentMessage","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","json","placeholder","ChatList","data","messageDisplay","map","time","App","selection","handleLogout","a","handleError","err","console","warn","catch","ok","remove","user","set","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a77998.chunk.js","sourcesContent":["import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass Registration extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n\n  render() {\n    return(\n\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Create a username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Enter your email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Choose a password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password1\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Enter Password Again</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password2\" onChange={this.handleInput} />\n        </div>\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('login')}>Already have an account? Login!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">REGISTER</button>\n      </form>\n\n      // <form onSubmit={this.handleSubmit}>\n      //   <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.handleInput}/>\n      //   <input type=\"email\" name=\"email\" placeholder=\"email\" onChange={this.handleInput}/>\n      //   <input type=\"password\" name=\"password1\" placeholder=\"password\" onChange={this.handleInput}/>\n      //   <input type=\"password\" name=\"password2\" placeholder=\"enter password again\" onChange={this.handleInput}/>\n      // </form>\n\n    )\n  }\n}\n\nexport default Registration\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n\n  render() {\n    return(\n\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"username\" className=\"form-label\">Username</label>\n          <input type=\"text\" className=\"form-control\" id=\"username\" name=\"username\" onChange={this.handleInput} />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" onChange={this.handleInput} />\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\n          <input type=\"password\" className=\"form-control\" id=\"password\" name=\"password\" onChange={this.handleInput} />\n        </div>\n        <button type=\"button\" className=\"btn btn-link\" onClick={() => this.props.handleNavigation('register')}>Need an account? Register!</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login\n","import Cookies from 'js-cookie';\nimport { Component } from 'react';\nimport './App.css';\n\nclass MessageForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  sendMessage(event) {\n    // event.preventDefault();\n    // this.setState({ messages: '' })\n\n    const currentMessage = {\n        message: this.state.messages,\n    }\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(currentMessage),\n    }\n    fetch('/api/v1/chat/', options)\n      .then(response => response.json());\n}\n  render() {\n\n    return (\n      <form onSubmit= {this.sendMessage}>\n        <textarea className=\"form-input\" name=\"messages\" value={this.state.messages} placeholder=\"Start your messge\" onChange={this.handleInput}></textarea>\n        <button className=\"send-button\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageForm;\n","import {Component} from 'react';\nimport MessageForm from './Chats';\n\nclass ChatList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('api/v1/chat/')\n    .then(response => response.json())\n    .then(data => this.setState({ messages: data }));\n  }\n\n  render() {\n    const messageDisplay = this.state.messages.map((message) => (\n      <li className='list'key={message.id}>\n        <p>{message.message}</p>\n        <p>{message.time}</p>\n      </li>\n    ))\n\n    return(\n      <>\n      <div className=\"chat-box\">\n        {messageDisplay}\n      </div>\n      <div className=\"message-box\">\n        <MessageForm/>\n      </div>\n    </>\n    )\n  }\n}\n\nexport default ChatList;\n","import './App.css';\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\n\nimport Registration from './Registration';\nimport Login from './Login';\n\nimport ChatList from './ChatList';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chats' : 'login'\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  async handleLogout() {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n    if(response.ok) {\n      Cookies.remove('Authorization');\n      this.setState({selection: 'login'});\n    }\n\n\n  }\n\n  async handleLogin(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({selection: 'chats'});\n    } else {\n      // throw an Error\n    }\n  }\n\n  async handleRegistration(user) {\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user)\n    };\n\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chats' });\n    } else {\n      // throw an Error\n    }\n  }\n\n  handleNavigation(selection) {\n    this.setState({selection});\n  }\n\n  render() {\n    Cookies.remove('Authorization');\n    return (\n      <>\n       <div className=\"App\">\n         <div className=\"App-header\">\n\n            <h1>My Awesome Chat App</h1>\n            {this.state.selection === 'login' && <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation}/>}\n            {this.state.selection === 'register' && <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>}\n            {this.state.selection === 'chats' && <ChatList />}\n        </div>\n      </div>\n      </>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}